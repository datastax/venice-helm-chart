apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "venice.fullname" . }}-router
  labels:
    {{- include "venice.labels.router" . | nindent 4 }}
spec:
  replicas: {{ .Values.venice.router.replicas }}
  selector:
    matchLabels:
      {{- include "venice.selectorLabels.router" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "venice.selectorLabels.router" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "venice.serviceAccountName" . }}-router
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.router.repository }}:{{ .Values.image.router.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.router.pullPolicy }}
          command: [ "sh", "-c" ]
          args:
            - >
              env && 
              set -e &&
              setup_tls() {
                name=venice
                crtFile=/venice/certs/tls.crt
                keyFile=/venice/certs/tls.key
                caFile=/etc/ssl/certs/ca-certificates.crt
                p12File=/opt/venice/tls.p12
                keyStoreFile=/opt/venice/tls.keystore.jks
                

                keystoreSecretFile=/opt/venice/keystoreSecret.txt
                head /dev/urandom | base64 | head -c 24 > $keystoreSecretFile
                
                export VENICECONF_ssl_truststore_password=$(cat /opt/venice/keystoreSecret.txt)
                export VENICECONF_ssl_truststore_type=JKS
                export VENICECONF_ssl_truststore_location=/opt/venice/tls.truststore.jks

                export VENICECONF_ssl_keystore_password=$(cat /opt/venice/keystoreSecret.txt)
                export VENICECONF_ssl_keystore_type=JKS
                export VENICECONF_ssl_keystore_location=/opt/venice/tls.keystore.jks
                set -x
                

                openssl pkcs12 \
                    -export \
                    -in ${crtFile} \
                    -inkey ${keyFile} \
                    -out ${p12File} \
                    -name ${name} \
                    -passout "file:${keystoreSecretFile}"

                cat ${keystoreSecretFile}

                keytool -importkeystore \
                    -srckeystore ${p12File} \
                    -srcstoretype PKCS12 -srcstorepass:file ${keystoreSecretFile} \
                    -alias ${name} \
                    -destkeystore $VENICECONF_ssl_keystore_location \
                    -deststorepass:file ${keystoreSecretFile}

                keytool -import \
                    -file ${caFile} \
                    -storetype JKS \
                    -alias ${name} \
                    -keystore $VENICECONF_ssl_truststore_location \
                    -storepass:file ${keystoreSecretFile} \
                    -trustcacerts -noprompt
              } &&
              {{ if .Values.router.ssl.enabled }}
              setup_tls &&
              {{ end }}
              export VENICECONF_listener_hostname=$(hostname -i) &&
              /opt/venice/bin/apply-config-from-env-with-prefix.py VENICECONF_ /opt/venice/configs/single-dc/router.properties &&
              {{ if .Values.metrics.enabled }}
              export METRICS="-javaagent:bin/jmx_prometheus_javaagent.jar=8080:bin/prometheus_config.yaml" &&
              {{ end }}
              exec java $METRICS -jar bin/venice-router-all.jar configs/single-dc/router.properties
          envFrom:
            - configMapRef:
                name: "{{ include "venice.fullname" . }}-router"
          ports:
            - name: http
              containerPort: 7777
              protocol: TCP
            - name: https
              containerPort: 7778
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.venice.router.resources | nindent 12 }}
          volumeMounts:
            {{- if and (.Values.authentication.enableTokenAuth) (.Values.authentication.publicKeySecretName) }}
            - name: token-public-key
              readOnly: true
              mountPath: "/venice/jwtPublicKey"
            {{- end }}
            {{- if .Values.router.ssl.enabled }}
            - name: certs
              readOnly: true
              mountPath: "/venice/certs"
            {{- end }}
      volumes:
      {{- if and (.Values.authentication.enableTokenAuth) (.Values.authentication.publicKeySecretName) }}
        - name: token-public-key
          secret:
            secretName: {{.Values.authentication.publicKeySecretName}}
      {{- end }}
      {{- if .Values.router.ssl.enabled }}
        - name: certs
          secret:
            secretName: {{ .Values.router.ssl.secretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
