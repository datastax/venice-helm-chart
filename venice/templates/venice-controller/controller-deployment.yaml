apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "venice.fullname" . }}-controller
  labels:
    {{- include "venice.labels.controller" . | nindent 4 }}
spec:
  replicas: {{ .Values.venice.controller.replicas }}
  selector:
    matchLabels:
      {{- include "venice.selectorLabels.controller" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "venice.selectorLabels.controller" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "venice.serviceAccountName" . }}-controller
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.controller.repository }}:{{ .Values.image.controller.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.controller.pullPolicy }}
          command: [ "sh", "-c" ]
          args:
            - >
              env &&
              export VENICECONF_admin_hostname=$(hostname -i) &&
              {{ if .Values.kafka.ssl.convertPEMtoPKCS12 }}
              openssl pkcs12 -export -out /tmp/trustore.p12 -in {{.Values.kafka.ssl.certsPath}}/{{.Values.kafka.ssl.truststorePEMFile}} -inkey {{.Values.kafka.ssl.certsPath}}/{{.Values.kafka.ssl.truststorePEMFileKey}} -passout pass: &&
              {{ end }}
              {{- if .Values.kafka.sasl.readPasswordFromSecret }}
              export SASLPASSWORD=$(cat {{.Values.kafka.sasl.passwordPath}}/{{.Values.kafka.sasl.passwordFile}})  &&
              export SASLCONFIG="org.apache.kafka.common.security.plain.PlainLoginModule required username=\"{{ .Values.kafka.sasl.username }}\" password=\"token:$SASLPASSWORD\";"  &&              
              export VENICECONF_kafka_sasl_jaas_config="$SASLCONFIG"  &&              
              {{ end }}
              env &&
              /opt/venice/bin/apply-config-from-env-with-prefix.py VENICECONF_ /opt/venice/configs/single-dc/controller.properties &&
              /opt/venice/bin/apply-config-from-env-with-prefix.py VENICECONF_ /opt/venice/configs/single-dc/cluster.properties &&
              {{ if .Values.metrics.enabled }}
                 export METRICS="-javaagent:bin/jmx_prometheus_javaagent.jar=8080:bin/prometheus_config.yaml" &&
              {{ end }}               
              exec java $METRICS  -jar /opt/venice/bin/venice-controller-all.jar configs/single-dc/cluster.properties configs/single-dc/controller.properties
          ports:
            - name: http
              containerPort: 5555
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            {{- if .Values.kafka.ssl.enabled }}
            - name: certs
              readOnly: true
              mountPath: {{ .Values.kafka.ssl.certsPath }}
            {{- end }}
            {{- if .Values.authentication.enableTokenAuth }}
            - name: token-public-key
              readOnly: true
              mountPath: "/venice/jwtPublicKey"
            {{- end }}
            {{- if .Values.kafka.sasl.readPasswordFromSecret }}
            - name: saslpassword
              readOnly: true
              mountPath: {{ .Values.kafka.sasl.passwordPath }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: "{{ include "venice.fullname" . }}-controller"
          resources:
            {{- toYaml .Values.venice.controller.resources | nindent 12 }}
      volumes:
      {{- if .Values.kafka.ssl.enabled }}
      - name: certs
        secret:
          secretName: {{ .Values.kafka.ssl.tlsSecretName }}
      {{- end }}
      {{- if .Values.authentication.enableTokenAuth }}
      - name: token-public-key
        secret:
          secretName: {{.Values.authentication.publicKeySecretName}}
      {{- end }}
      {{- if .Values.kafka.sasl.readPasswordFromSecret }}
      - name: saslpassword
        secret:
          secretName: {{ .Values.kafka.sasl.passwordSecretName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
