apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "venice.fullname" . }}-server
  labels:
    {{- include "venice.labels.server" . | nindent 4 }}
spec:
  replicas: {{ .Values.venice.server.replicas }}
  serviceName: "{{ template "venice.fullname" . }}-server"
  selector:
    matchLabels:
      {{- include "venice.selectorLabels.server" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "venice.selectorLabels.server" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "venice.serviceAccountName" . }}-server
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.server.repository }}:{{ .Values.image.server.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.server.pullPolicy }}
          command: [ "sh", "-c" ]
          args:
            - >
              export VENICECONF_listener_hostname=$(hostname -f) &&
              {{ if .Values.kafka.ssl.convertPEMtoPKCS12 }}
              openssl pkcs12 -export -out /tmp/trustore.p12 -in {{.Values.kafka.ssl.certsPath}}/{{.Values.kafka.ssl.truststorePEMFile}} -inkey {{.Values.kafka.ssl.certsPath}}/{{.Values.kafka.ssl.truststorePEMFileKey}} -passout pass: &&
              {{ end }}
              {{- if .Values.kafka.sasl.readPasswordFromSecret }}
              export SASLPASSWORD=$(cat {{.Values.kafka.sasl.passwordPath}}/{{.Values.kafka.sasl.passwordFile}})  &&
              export SASLCONFIG="org.apache.kafka.common.security.plain.PlainLoginModule required username=\"{{ .Values.kafka.sasl.username }}\" password=\"token:$SASLPASSWORD\";"  &&
              export VENICECONF_kafka_sasl_jaas_config="$SASLCONFIG"  &&              
              {{ end }}
              /opt/venice/bin/apply-config-from-env-with-prefix.py VENICECONF_ /opt/venice/configs/single-dc/server.properties &&
              /opt/venice/bin/apply-config-from-env-with-prefix.py VENICECONF_ /opt/venice/configs/single-dc/cluster.properties &&
              {{ if .Values.metrics.enabled }}
                 export METRICS="-javaagent:bin/jmx_prometheus_javaagent.jar=8080:bin/prometheus_config.yaml" &&
              {{ end }}
              exec java $METRICS -jar bin/venice-server-all.jar configs/single-dc
          envFrom:
            - configMapRef:
                name: "{{ include "venice.fullname" . }}-server"
          volumeMounts:
            - name: "venice-server-rocksdb-data"
              mountPath: /opt/venice/rocksdb
          {{- if .Values.kafka.ssl.enabled }}
            - name: certs
              readOnly: true
              mountPath: {{ .Values.kafka.ssl.certsPath }}
          {{- end }}
          {{- if .Values.kafka.sasl.readPasswordFromSecret }}
            - name: saslpassword
              readOnly: true
              mountPath: {{ .Values.kafka.sasl.passwordPath }}
          {{- end }}
          ports:
            - name: http
              containerPort: 54093
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.venice.server.resources | nindent 12 }}
      volumes:
        {{- if .Values.kafka.ssl.enabled }}
        - name: certs
          secret:
            secretName: {{ .Values.kafka.ssl.tlsSecretName }}
        {{- end }}
        {{- if .Values.kafka.sasl.readPasswordFromSecret }}
        - name: saslpassword
          secret:
            secretName: {{ .Values.kafka.sasl.passwordSecretName }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: "venice-server-rocksdb-data"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi